
-- ----------------------------
-- Procedure structure for ZXBS_MIDDLE_TABLE_DATA
-- ----------------------------
DROP PROCEDURE IF EXISTS ZXBS_MIDDLE_TABLE_DATA;
DELIMITER ;;
CREATE DEFINER='root'@'%' PROCEDURE ZXBS_MIDDLE_TABLE_DATA(OUT P_O_RESULT varchar(10))
BEGIN
  DECLARE V_STEP             VARCHAR(10) DEFAULT '0';
	DECLARE V_PROC_NAME        VARCHAR(100)DEFAULT 'ZXBS_MIDDLE_TABLE_DATA';
	DECLARE V_SUCCESS          VARCHAR(10) DEFAULT 'SUCCESS';
	DECLARE V_FAILED           VARCHAR(10) DEFAULT 'FAILED';
  DECLARE V_START_TIME       VARCHAR(100);
	DECLARE V_END_TIME         VARCHAR(100);
	DECLARE V_FREQ             VARCHAR(1) DEFAULT 'D';
	DECLARE V_CODE             VARCHAR(20) DEFAULT '00000';
	DECLARE V_MESSAGE          TEXT;
  DECLARE TARGET_TABLE_CNT NUMERIC; -- 目标表数据量
	
	 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
           GET DIAGNOSTICS CONDITION 1 
		   V_CODE= RETURNED_SQLSTATE, V_MESSAGE = MESSAGE_TEXT;
     END;
	 
    START TRANSACTION;
  SET V_START_TIME = DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s:%f');
  -- 个人基本信息
  SET V_STEP = '1';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE I_BS_MIDDLE;

  INSERT INTO I_BS_MIDDLE
    (ID_TYPE, ID_NUM,EXTEND1,COMPANY)
    SELECT ID_TYPE, ID_NUM,NAME, COMPANY
      FROM (SELECT ID_TYPE, ID_NUM,NAME, COMPANY
              FROM I_BS
            UNION ALL
            SELECT ID_TYPE, ID_NUM,NAME, COMPANY
              FROM I_BS_HIST) A
     GROUP BY ID_TYPE, ID_NUM,NAME, COMPANY;
  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM I_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'I_BS',
     'I_BS_HIST',
     'I_BS_MIDDLE',
     '110-个人基本信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 家族关系信息记录
  SET V_STEP = '2';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE I_IN_FAL_MMBS_INF_MIDDLE;

  INSERT INTO I_IN_FAL_MMBS_INF_MIDDLE
    (ID_TYPE, ID_NUM, COMPANY)
    SELECT ID_TYPE, ID_NUM, COMPANY
      FROM (SELECT ID_TYPE, ID_NUM, COMPANY
              FROM I_IN_FAL_MMBS_INF
            UNION ALL
            SELECT ID_TYPE, ID_NUM, COMPANY
              FROM I_IN_FAL_MMBS_INF_HIST) A
     GROUP BY ID_TYPE, ID_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM I_IN_FAL_MMBS_INF_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'I_IN_FAL_MMBS_INF',
     'I_IN_FAL_MMBS_INF_HIST',
     'I_IN_FAL_MMBS_INF_MIDDLE',
     '120-家族关系信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);

  COMMIT;

  -- 个人证件有效期信息记录
  SET V_STEP = '3';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE I_IN_ID_EFCT_INF_MIDDLE;

  INSERT INTO I_IN_ID_EFCT_INF_MIDDLE
    (ID_TYPE, ID_NUM, COMPANY)
    SELECT ID_TYPE, ID_NUM, COMPANY
      FROM (SELECT ID_TYPE, ID_NUM, COMPANY
              FROM I_IN_ID_EFCT_INF
            UNION ALL
            SELECT ID_TYPE, ID_NUM, COMPANY
              FROM I_IN_ID_EFCT_INF_HIST) A
     GROUP BY ID_TYPE, ID_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM I_IN_ID_EFCT_INF_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'I_IN_ID_EFCT_INF',
     'I_IN_ID_EFCT_INF_HIST',
     'I_IN_ID_EFCT_INF_MIDDLE',
     '130-个人证件有效期信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);

  COMMIT;

  -- 个人借贷账户信息记录
  SET V_STEP = '4';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE I_ACCT_BS_MIDDLE;

  INSERT INTO I_ACCT_BS_MIDDLE
    (ACCT_TYPE, ACCT_CODE,EXTEND1,EXTEND2, COMPANY)
    SELECT ACCT_TYPE, ACCT_CODE,NAME,ID_NUM, COMPANY
      FROM (SELECT ACCT_TYPE, ACCT_CODE,NAME,ID_NUM,COMPANY
              FROM I_ACCT_BS
            UNION ALL
            SELECT ACCT_TYPE, ACCT_CODE,NAME,ID_NUM,COMPANY
              FROM I_ACCT_BS_HIST) A
     GROUP BY ACCT_TYPE, ACCT_CODE,NAME,ID_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM I_ACCT_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'I_ACCT_BS',
     'I_ACCT_BS_HIST',
     'I_ACCT_BS_MIDDLE',
     '210-个人借贷账户信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 个人授信协议信息记录
  SET V_STEP = '5';

  -- 将原来表中的问题数据清空，重新跑数 
 TRUNCATE TABLE I_CTRCT_BS_MIDDLE;

  INSERT INTO I_CTRCT_BS_MIDDLE
    (CONTRACT_CODE, COMPANY)
    SELECT CONTRACT_CODE, COMPANY
      FROM (SELECT CONTRACT_CODE, COMPANY
              FROM I_CTRCT_BS
            UNION ALL
            SELECT CONTRACT_CODE, COMPANY
              FROM I_CTRCT_BS_HIST) A
     GROUP BY CONTRACT_CODE, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM I_CTRCT_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'I_CTRCT_BS',
     'I_CTRCT_BS_HIST',
     'I_CTRCT_BS_MIDDLE',
     '220-个人授信协议信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 个人担保账户信息记录
  SET V_STEP = '6';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE I_GUAR_ACCT_BS_MIDDLE;

  INSERT INTO I_GUAR_ACCT_BS_MIDDLE
    (ACCT_TYPE, ACCT_CODE,EXTEND1,EXTEND2, COMPANY)
    SELECT ACCT_TYPE, ACCT_CODE,NAME,ID_NUM, COMPANY
      FROM (SELECT ACCT_TYPE, ACCT_CODE,NAME,ID_NUM, COMPANY
              FROM I_GUAR_ACCT_BS
            UNION ALL
            SELECT ACCT_TYPE, ACCT_CODE,NAME,ID_NUM, COMPANY
              FROM I_GUAR_ACCT_BS_HIST) A
     GROUP BY ACCT_TYPE, ACCT_CODE,NAME,ID_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM I_GUAR_ACCT_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'I_GUAR_ACCT_BS',
     'I_GUAR_ACCT_BS_HIST',
     'I_GUAR_ACCT_BS_MIDDLE',
     '230-个人担保账户信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业基本信息记录
  SET V_STEP = '7';

  -- 将原来表中的问题数据清空，重新跑数 
  /*TRUNCATE TABLE E_BS_MIDDLE;

  INSERT INTO E_BS_MIDDLE
    (ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY)
    SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
      FROM (SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_BS
            UNION ALL
            SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_BS_HIST) A
     GROUP BY ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY;
  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_BS',
     'E_BS_HIST',
     'E_BS_MIDDLE',
     '310-企业基本信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业间关联关系信息记录
  SET V_STEP = '8';

  -- 将原来表中的问题数据清空，重新跑数 
  EXECUTE IMMEDIATE 'TRUNCATE TABLE E_ICDN_RLTP_INF_MIDDLE';

  INSERT INTO E_ICDN_RLTP_INF_MIDDLE
    (ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY)
    SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
      FROM (SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_ICDN_RLTP_INF
            UNION ALL
            SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_ICDN_RLTP_INF_HIST) A
     GROUP BY ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY;
  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_ICDN_RLTP_INF_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_ICDN_RLTP_INF',
     'E_ICDN_RLTP_INF_HIST',
     'E_ICDN_RLTP_INF_MIDDLE',
     '350-企业间关联关系信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业借贷账户记录
  SET V_STEP = '9';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_ACCT_BS_MIDDLE;

  INSERT INTO E_ACCT_BS_MIDDLE
    (ACCT_TYPE, ACCT_CODE, COMPANY)
    SELECT ACCT_TYPE, ACCT_CODE, COMPANY
      FROM (SELECT ACCT_TYPE, ACCT_CODE, COMPANY
              FROM E_ACCT_BS
            UNION ALL
            SELECT ACCT_TYPE, ACCT_CODE, COMPANY
              FROM E_ACCT_BS_HIST) A
     GROUP BY ACCT_TYPE, ACCT_CODE, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_ACCT_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_ACCT_BS',
     'E_ACCT_BS_HIST',
     'E_ACCT_BS_MIDDLE',
     '410-企业借贷账户记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业授信协议信息记录
  SET V_STEP = '10';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_CTRCT_BS_MIDDLE;

  INSERT INTO E_CTRCT_BS_MIDDLE
    (CONTRACT_CODE, COMPANY)
    SELECT CONTRACT_CODE, COMPANY
      FROM (SELECT CONTRACT_CODE, COMPANY
              FROM E_CTRCT_BS
            UNION ALL
            SELECT CONTRACT_CODE, COMPANY
              FROM E_CTRCT_BS_HIST) A
     GROUP BY CONTRACT_CODE, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_CTRCT_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_CTRCT_BS',
     'E_CTRCT_BS_HIST',
     'E_CTRCT_BS_MIDDLE',
     '420-企业授信协议信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业担保账户信息记录
  V_STEP := '11';
  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_GUAR_ACCT_BS_MIDDLE;

  INSERT INTO E_GUAR_ACCT_BS_MIDDLE
    (ACCT_TYPE, ACCT_CODE, COMPANY)
    SELECT ACCT_TYPE, ACCT_CODE, COMPANY
      FROM (SELECT ACCT_TYPE, ACCT_CODE, COMPANY
              FROM E_GUAR_ACCT_BS
            UNION ALL
            SELECT ACCT_TYPE, ACCT_CODE, COMPANY
              FROM E_GUAR_ACCT_BS_HIST) A
     GROUP BY ACCT_TYPE, ACCT_CODE, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_GUAR_ACCT_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_GUAR_ACCT_BS',
     'E_GUAR_ACCT_BS_HIST',
     'E_GUAR_ACCT_BS_MIDDLE',
     '440-企业担保账户信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业资产负债表信息记录
  SET V_STEP = '12';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_BALANCE_SHEET_BS_MIDDLE;

  INSERT INTO E_BALANCE_SHEET_BS_MIDDLE
    (ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY)
    SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
      FROM (SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_BALANCE_SHEET_BS
            UNION ALL
            SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_BALANCE_SHEET_BS_HIST) A
     GROUP BY ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_BALANCE_SHEET_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_BALANCE_SHEET_BS',
     'E_BALANCE_SHEET_BS_HIST',
     'E_BALANCE_SHEET_BS_MIDDLE',
     '610-企业资产负债表信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业利润及利润分配表信息记录
  SET V_STEP = '13';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_INCOME_STATEMENT_MIDDLE;

  INSERT INTO E_INCOME_STATEMENT_MIDDLE
    (ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY)
    SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
      FROM (SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_INCOME_STATEMENT
            UNION ALL
            SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_INCOME_STATEMENT_HIST) A
     GROUP BY ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_INCOME_STATEMENT_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_INCOME_STATEMENT',
     'E_INCOME_STATEMENT_HIST',
     'E_INCOME_STATEMENT_MIDDLE',
     '620-企业利润及利润分配表信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 企业现金流量表信息记录
  SET V_STEP = '14';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_CASH_FLOWS_BS_MIDDLE;

  INSERT INTO E_CASH_FLOWS_BS_MIDDLE
    (ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY)
    SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
      FROM (SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_CASH_FLOWS_BS
            UNION ALL
            SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_CASH_FLOWS_BS_HIST) A
     GROUP BY ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_CASH_FLOWS_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_CASH_FLOWS_BS',
     'E_CASH_FLOWS_BS_HIST',
     'E_CASH_FLOWS_BS_MIDDLE',
     '630-企业现金流量表信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 事业单位资产负债表信息记录
  SET V_STEP = '15';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_INSTITU_BALANCE_BS_MIDDLE;

  INSERT INTO E_INSTITU_BALANCE_BS_MIDDLE
    (ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY)
    SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
      FROM (SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_INSTITU_BALANCE_BS
            UNION ALL
            SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_INSTITU_BALANCE_BS_HIST) A
     GROUP BY ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_INSTITU_BALANCE_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_INSTITU_BALANCE_BS',
     'E_INSTITU_BALANCE_BS_HIST',
     'E_INSTITU_BALANCE_BS_MIDDLE',
     '640-事业单位资产负债表信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

  -- 事业单位收入支出表信息记录
  SET V_STEP = '16';

  -- 将原来表中的问题数据清空，重新跑数 
  TRUNCATE TABLE E_INCOME_EXPENSE_BS_MIDDLE;

  INSERT INTO E_INCOME_EXPENSE_BS_MIDDLE
    (ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY)
    SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
      FROM (SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_INCOME_EXPENSE_BS
            UNION ALL
            SELECT ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY
              FROM E_INCOME_EXPENSE_BS_HIST) A
     GROUP BY ENT_CERT_TYPE, ENT_CERT_NUM, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM E_INCOME_EXPENSE_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'E_INCOME_EXPENSE_BS',
     'E_INCOME_EXPENSE_BS_HIST',
     'E_INCOME_EXPENSE_BS_MIDDLE',
     '650-事业单位收入支出表信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;*/

  -- 抵质押合同信息信息记录
  SET V_STEP = '17';

  -- 将原来表中的问题数据清空，重新跑数
  TRUNCATE TABLE MOTGA_CLTAL_CTRCT_BS_MIDDLE;

  INSERT INTO MOTGA_CLTAL_CTRCT_BS_MIDDLE
    (CC_CODE, COMPANY)
    SELECT CC_CODE, COMPANY
      FROM (SELECT CC_CODE, COMPANY
              FROM MOTGA_CLTAL_CTRCT_BS
            UNION ALL
            SELECT CC_CODE, COMPANY
              FROM MOTGA_CLTAL_CTRCT_BS_HIST) A
     GROUP BY CC_CODE, COMPANY;

  -- 统计目标表（中间表）数据量
  SELECT COUNT(*) INTO TARGET_TABLE_CNT FROM MOTGA_CLTAL_CTRCT_BS_MIDDLE;
  -- 写入日志
  INSERT INTO ZXBS_MIDDLE_TABLE_DATA_LOG
    (V_DATE,
     PROC_NAME,
     STEP,
     TABLE_NAME,
     HIST_TABLE_NAME,
     TARGET_TABLE_NAME,
     INF_REC_TYPE_DES,
     TARGET_TABLE_CNT,
     STATUS)
  VALUES
    (NOW(),
     V_PROC_NAME,
     V_STEP,
     'MOTGA_CLTAL_CTRCT_BS',
     'MOTGA_CLTAL_CTRCT_BS_HIST',
     'MOTGA_CLTAL_CTRCT_BS_MIDDLE',
     '510-抵质押合同信息信息记录',
     TARGET_TABLE_CNT,
     P_O_RESULT);
  COMMIT;

/*处理结束，记录日志信息*/
	SET V_STEP = 'N';
	SET  V_END_TIME = DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s');
	IF V_CODE = '00000' THEN 
	    COMMIT;
	    SET P_O_RESULT = V_SUCCESS;
	    INSERT INTO ETL_SUCCESS_LOG(PROC_NAME,START_TIME,END_TIME,P_O_RESULT)
	    VALUES(V_PROC_NAME,V_START_TIME,V_END_TIME,P_O_RESULT);
		COMMIT;
	ELSE 
	    ROLLBACK;
		SET P_O_RESULT = V_FAILED;
		INSERT INTO ETL_ERROR_LOG(DATA_DATE,STEP,ERROR_MSG,PROC_NAME,P_O_RESULT)
		VALUES (DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s'),V_STEP,CONCAT(V_CODE,':',V_MESSAGE),V_PROC_NAME,P_O_RESULT);
		COMMIT;
	END IF;
END
;;
DELIMITER ;
