<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EntInstitutionBalanceManager">
	<resultMap type="com.dcits.supervise.pecr.ent.entity.EntInstitutionBalance" id="insBalanceResultMap">
		<result column="EKA_INSTITUTION_BALANCE_SHT_ID" property="ekaInstitutionBalanceShtId" />
		<result column="INF_REC_TYPE" property="infRecType" />
		<result column="ENT_NAME" property="entName" />
		<result column="ENT_CERT_TYPE" property="entCertType" />
		<result column="ENT_CERT_NUM" property="entCertNum" />
		<result column="RPT_DATE" property="rptDate" />
		<result column="SHEET_YEAR" property="sheetYear" />
		<result column="SHEET_TYPE" property="sheetType" />
		<result column="SHEET_TYPE_DIVIDE" property="sheetTypeDivide" />
		<result column="AUDIT_FIRM_NAME" property="auditFirmName" />
		<result column="AUDITOR_NAME" property="auditorName" />
		<result column="AUDIT_TIME" property="auditTime" />
		<result column="CIMOC" property="cimoc" />
		<result column="RPT_DATE_CODE" property="rptDateCode" />
		<result column="ORG_NAME" property="orgName" />
		<result column="ORG_CODE" property="orgCode" />
		<result column="BUSINESS_STATES" property="businessStates" />
		<result column="REJECT_REASON" property="rejectReason" />
		<result column="IS_FILTER" property="isFilter" />
	</resultMap>

	<!-- 企业利润及利润分配表 基础段 -->
	<select id="insBalanceSheetBslistPage" parameterType="page" resultMap="insBalanceResultMap">
		 select eka_institution_balance_sht_id,
				inf_rec_type,
				ent_name,
				ent_cert_type,
				ent_cert_num,
				rpt_date,
				sheet_year,
				sheet_type,
				sheet_type_divide,
				audit_firm_name,
				auditor_name,
				audit_time,
				cimoc,
				rpt_date_code,
				org_name,
				org_code,
				business_states,
				reject_reason,
				is_filter,
				COMPANY
		   from E_INSTITU_BALANCE_bs
		   <if test="pd.managerId != null and pd.managerId != ''">
			   LEFT JOIN PECR.sys_l_c_a_m_m M
			   ON E_INSTITU_BALANCE_bs.ENT_NAME = M.CUST_NAME
			   AND E_INSTITU_BALANCE_bs.ENT_CERT_TYPE = M.CUST_ID_TYPE
			   AND E_INSTITU_BALANCE_bs.ENT_CERT_NUM = M.CUST_ID_NUM
		   	</if>
		<where>
			<if test='pd.queryType == "APPLY"'>
				and business_states in ('10','11','40','80','110','20')
			</if>
			<if test='pd.queryType == "CHECK"'>
				and business_states in ('20')
			</if>
			<if test="pd.rptDate != null and pd.rptDate != ''">
		         and rpt_date = #{pd.rptDate}
		    </if>
		    <if test="pd.entName != null and pd.entName != ''">
		   	  	and ent_name like '%${pd.entName}%'
		   	</if>
		   	<if test="pd.entCertType != null and pd.entCertType != ''">
		   	  	and ent_cert_type = #{pd.entCertType}
		   	</if>
		   	<if test="pd.entCertNum != null and pd.entCertNum != ''">
		   	  	and ent_cert_num like '%${pd.entCertNum}%'
		   	</if>
		   	<if test="pd.businessStates != null and pd.businessStates != ''">
		   	  	and business_states = #{pd.businessStates}
		   	</if>
		   	<if test="pd.managerId != null and pd.managerId != ''">
		   	  	and M.MANAGER_ID = #{pd.managerId}
		   		AND M.DATA_TYPE = '2'
		   		AND M.DATA_LEVEL = '6'
		   		AND M.END_DATE = '2099-12-31'
		   	</if>
		   		and COMPANY = #{pd.COMPANY}
		</where>
	</select>

	<!-- 详情或者修改 查询指定记录 基础段 -->
	<select id="getInstitutionInfoById" parameterType="pd" resultType="map">
		 select eka_institution_balance_sht_id,
				inf_rec_type,
				ent_name,
				ent_cert_type,
				ent_cert_num,
				rpt_date,
				sheet_year,
				sheet_type,
				sheet_type_divide,
				audit_firm_name,
				auditor_name,
				audit_time,
				cimoc,
				rpt_date_code,
				org_name,
				org_code,
				business_states,
				reject_reason,
				is_filter,
				COMPANY
		   from E_INSTITU_BALANCE_bs
		  where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId}
		    and COMPANY = #{COMPANY}
	</select>

	<!-- 详情或者修改 查询指定记录   事业单位资产负债表段-->
	<select id="getInstitutionSheetById" parameterType="pd" resultType="pd">
		 select ekb_institution_balance_sht_id,
				currency_funds,
				short_term_investments,
				amount_of_financial_return,
				notes_receivable,
				accounts_receivable,
				prepayments,
				other_receivables,
				inventories,
				other_current_assets,
				total_current_assets,
				long_term_investment,
				fixed_assets,
				original_cost_of_fixed_asset,
				fixed_asset_accumulated_deprec,
				construction_in_process,
				intangible_assets,
				original_price_of_intangible_a,
				accumulated_amortization,
				assets_to_be_processed_pending,
				total_non_current_assets,
				total_assets,
				short_term_borrowings,
				tax_payable,
				treasury_payable,
				payable_financial_special_acco,
				employee_benefits_payable,
				notes_payable,
				accounts_payable,
				receipts_in_advance,
				other_payables,
				other_current_liabilities,
				total_current_liabilities,
				long_term_borrowings,
				long_term_payables,
				total_non_current_liabilities,
				total_liabilities,
				enterprise_fund,
				non_current_assets_fund,
				special_purpose_funds,
				financial_aid_carried_over,
				financial_aid_balance,
				non_financial_aid_carried_over,
				non_financial_aid_balance,
				undertakings_balance,
				operating_balance,
				total_net_assets,
				total_liabilities_and_net_asse,
				COMPANY
		   from E_INSTITU_BALANCE
		  where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId}
	</select>
	
	<!-- 查询 基础段 主键是否存在 -->
	<select id="getInstitutionInfoBsKey" parameterType="map" resultType="int">
		select count(1) 
		  from E_INSTITU_BALANCE_bs
	     where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId}
	</select>
	
	<!-- 新增    基础段 -->
	<insert id="insertInstitutionInfoBs" parameterType="map">
		<![CDATA[
		insert into E_INSTITU_BALANCE_bs(
					eka_institution_balance_sht_id,
					inf_rec_type,
					ent_name,
					ent_cert_type,
					ent_cert_num,
					rpt_date,
					sheet_year,
					sheet_type,
					sheet_type_divide,
					audit_firm_name,
					auditor_name,
					audit_time,
					cimoc,
					rpt_date_code,
					operator_user,
					org_code,
					business_states,
					is_filter,
					COMPANY)
		    values (#{ekaInstitutionBalanceShtId, jdbcType=CHAR},
					#{infRecType, jdbcType=CHAR},
					#{entName, jdbcType=VARCHAR},
					#{entCertType, jdbcType=VARCHAR},
					#{entCertNum, jdbcType=VARCHAR},
					#{rptDate,jdbcType=VARCHAR},
					#{sheetYear, jdbcType=VARCHAR},
					#{sheetType, jdbcType=VARCHAR},
					#{sheetTypeDivide, jdbcType=VARCHAR},
					#{auditFirmName, jdbcType=VARCHAR},
					#{auditorName, jdbcType=VARCHAR},
					#{auditTime},
					#{cimoc, jdbcType=VARCHAR},
					#{rptDateCode, jdbcType=VARCHAR},
					#{operationUser, jdbcType=VARCHAR},
					#{orgCode, jdbcType=VARCHAR},
					'11',
					#{isFilter, jdbcType=VARCHAR},
					#{COMPANY}
				)
		]]>
	</insert>

	<!-- 更新    基础段 -->
	<update id="updateInstitutionInfoBs" parameterType="map">
		<![CDATA[
		 update E_INSTITU_BALANCE_bs
		 	set inf_rec_type = #{infRecType, jdbcType=CHAR},
					ent_name = #{entName, jdbcType=VARCHAR},
			   ent_cert_type = #{entCertType, jdbcType=VARCHAR},
				ent_cert_num = #{entCertNum, jdbcType=VARCHAR},
					rpt_date = #{rptDate,jdbcType=VARCHAR},
				  sheet_year = #{sheetYear, jdbcType=VARCHAR},
				  sheet_type = #{sheetType, jdbcType=VARCHAR},
		   sheet_type_divide = #{sheetTypeDivide, jdbcType=VARCHAR},
			 audit_firm_name = #{auditFirmName, jdbcType=VARCHAR},
				auditor_name = #{auditorName, jdbcType=VARCHAR},
				  audit_time = #{auditTime},
					   cimoc = #{cimoc, jdbcType=VARCHAR},
			   rpt_date_code = #{rptDateCode, jdbcType=VARCHAR},
			   operator_user = #{operationUser, jdbcType=VARCHAR},
					org_code = #{orgCode, jdbcType=VARCHAR},
			 business_states = '11',
				   is_filter = #{isFilter, jdbcType=VARCHAR}
		  where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId}
		    and COMPANY = #{COMPANY}
			
		]]>
		<!-- and business_states = '10' -->
	</update>

	<!-- 删除基础段 -->
	<delete id="delInstitutionInfoById" parameterType="map">
		delete from E_INSTITU_BALANCE_bs
		 where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId}
		   and COMPANY = #{COMPANY}
	</delete>
	
	<!-- 删除 事业单位资产负债表段 -->
	<delete id="delInstitutionSheetById" parameterType="map">
		delete from E_INSTITU_BALANCE
		 where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId}
	</delete>
	
	<!-- 查询  事业单位资产负债表段  主键是否存在 -->
	<select id="getInsBalanceKey" parameterType="map" resultType="int">
		select count(1) 
		  from E_INSTITU_BALANCE
	     where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId} 
		   and ekb_institution_balance_sht_id = #{ekbInstitutionBalanceShtId}
	</select>
	
	<!-- 新增  事业单位资产负债表段 -->
	<insert id="insertInsBalance" parameterType="map">
		<![CDATA[
		insert into E_INSTITU_BALANCE (
					ekb_institution_balance_sht_id,
					currency_funds,
					short_term_investments,
					amount_of_financial_return,
					notes_receivable,
					accounts_receivable,
					prepayments,
					other_receivables,
					inventories,
					other_current_assets,
					total_current_assets,
					long_term_investment,
					fixed_assets,
					original_cost_of_fixed_asset,
					fixed_asset_accumulated_deprec,
					construction_in_process,
					intangible_assets,
					original_price_of_intangible_a,
					accumulated_amortization,
					assets_to_be_processed_pending,
					total_non_current_assets,
					total_assets,
					short_term_borrowings,
					tax_payable,
					treasury_payable,
					payable_financial_special_acco,
					employee_benefits_payable,
					notes_payable,
					accounts_payable,
					receipts_in_advance,
					other_payables,
					other_current_liabilities,
					total_current_liabilities,
					long_term_borrowings,
					long_term_payables,
					total_non_current_liabilities,
					total_liabilities,
					enterprise_fund,
					non_current_assets_fund,
					special_purpose_funds,
					financial_aid_carried_over,
					financial_aid_balance,
					non_financial_aid_carried_over,
					non_financial_aid_balance,
					undertakings_balance,
					operating_balance,
					total_net_assets,
					total_liabilities_and_net_asse,
					eka_institution_balance_sht_id,
					COMPANY
					)
		    values (
		    		#{ekbInstitutionBalanceShtId, jdbcType=CHAR},
					#{currencyFunds},
					#{shortTermInvestments},
					#{amountOfFinancialReturn},
					#{notesReceivable},
					#{accountsReceivable},
					#{prepayments},
					#{otherReceivables},
					#{inventories} ,
					#{otherCurrentAssets},
					#{totalCurrentAssets},	
					#{longTermInvestment},
					#{fixedAssets},
					#{originalCostOfFixedAsset},
					#{fixedAssetAccumulatedDeprec},
					#{constructionInProcess},
					#{intangibleAssets},							 
					#{originalPriceOfIntangibleA},
					#{accumulatedAmortization},
					#{assetsToBeProcessedPending},
					#{totalNonCurrentAssets},
					#{totalAssets},
					#{shortTermBorrowings},
					#{taxPayable},
					#{treasuryPayable},							 
					#{payableFinancialSpecialAcco},
					#{employeeBenefitsPayable},
					#{notesPayable},
					#{accountsPayable},
					#{receiptsInAdvance},
					#{otherPayables},
					#{otherCurrentLiabilities},
					#{totalCurrentLiabilities},							 
					#{longTermBorrowings},
					#{longTermPayables},
					#{totalNonCurrentLiabilities},
					#{totalLiabilities},
					#{enterpriseFund},
					#{nonCurrentAssetsFund},
					#{specialPurposeFunds},
					#{financialAidCarriedOver},							 
					#{financialAidBalance},
					#{nonFinancialAidCarriedOver},
					#{nonFinancialAidBalance},
					#{undertakingsBalance},
					#{operatingBalance},
					#{totalNetAssets},
					#{totalLiabilitiesAndNetAsse},
					#{ekaInstitutionBalanceShtId, jdbcType=CHAR},
					#{COMPANY}
				   )
		]]>
	</insert>
	
	<!-- 更新   事业单位资产负债表段-->
	<update id="updateInsBalance" parameterType="map">
		<![CDATA[
			 update E_INSTITU_BALANCE
			 	set 
		   currency_funds = #{currencyFunds},
				short_term_investments = #{shortTermInvestments},
				amount_of_financial_return = #{amountOfFinancialReturn},
				notes_receivable = #{notesReceivable},
				accounts_receivable = #{accountsReceivable},
				prepayments = #{prepayments},
				other_receivables = #{otherReceivables},
				inventories = #{inventories},
				other_current_assets = #{otherCurrentAssets},
				total_current_assets = #{totalCurrentAssets},	
				long_term_investment = #{longTermInvestment},
				fixed_assets = #{fixedAssets},
				original_cost_of_fixed_asset = #{originalCostOfFixedAsset},
				fixed_asset_accumulated_deprec = #{fixedAssetAccumulatedDeprec},
				construction_in_process = #{constructionInProcess},
				intangible_assets = #{intangibleAssets},							 
				original_price_of_intangible_a = #{originalPriceOfIntangibleA},
				accumulated_amortization = #{accumulatedAmortization},
				assets_to_be_processed_pending = #{assetsToBeProcessedPending},
				total_non_current_assets = #{totalNonCurrentAssets},
				total_assets = #{totalAssets},
				short_term_borrowings = #{shortTermBorrowings},
				tax_payable = #{taxPayable},
				treasury_payable = #{treasuryPayable},							 
				payable_financial_special_acco = #{payableFinancialSpecialAcco},
				employee_benefits_payable = #{employeeBenefitsPayable},
				notes_payable = #{notesPayable},
				accounts_payable = #{accountsPayable},
				receipts_in_advance = #{receiptsInAdvance},
				other_payables = #{otherPayables},
				other_current_liabilities = #{otherCurrentLiabilities},
				total_current_liabilities = #{totalCurrentLiabilities},							 
				long_term_borrowings = #{longTermBorrowings},
				long_term_payables = #{longTermPayables},
				total_non_current_liabilities = #{totalNonCurrentLiabilities},
				total_liabilities = #{totalLiabilities},
				enterprise_fund = #{enterpriseFund},
				non_current_assets_fund = #{nonCurrentAssetsFund},
				special_purpose_funds = #{specialPurposeFunds},
				financial_aid_carried_over = #{financialAidCarriedOver},							 
				financial_aid_balance = #{financialAidBalance},
				non_financial_aid_carried_over = #{nonFinancialAidCarriedOver},
				non_financial_aid_balance = #{nonFinancialAidBalance},
				undertakings_balance = #{undertakingsBalance},
				operating_balance = #{operatingBalance},
				total_net_assets = #{totalNetAssets},
				total_liabilities_and_net_asse = #{totalLiabilitiesAndNetAsse}
		      where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId} 
		        and ekb_institution_balance_sht_id = #{ekbInstitutionBalanceShtId}
		        and COMPANY = #{COMPANY}
		     ]]>
	</update>
	
	<!-- 删除 事业单位资产负债表段  -->
	<delete id="delInsBalance" parameterType="map">
		delete from E_INSTITU_BALANCE
		 where eka_institution_balance_sht_id = #{ekaInstitutionBalanceShtId}
		   <!-- and ekb_institution_balance_sht_id = #{ekbInstitutionBalanceShtId} -->
	</delete>
	
</mapper>
